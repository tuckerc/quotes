/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Arrays;

public class App {

  public static void main(String[] args) {

      System.out.println(getBreakingBadQuote());

  }

  public static String getBreakingBadQuote() {

    try {
      URL url = new URL("https://breaking-bad-quotes.herokuapp.com/v1/quotes");
      Gson BBGson = new Gson();
      BreakingBadQuote[] BBQuote = null;
      HttpURLConnection con = null;
      BufferedReader in = null;

      try {
        con = (HttpURLConnection) url.openConnection();
        in = new BufferedReader(
            new InputStreamReader(con.getInputStream()));
        BBQuote = BBGson.fromJson(in, BreakingBadQuote[].class);
        return BBQuote[0].toString();
      } catch (IOException e) {
        return getJSONQuote();
      } finally {
        try {
          Gson JSONGson = new Gson();
          RecentQuote[] quotes = JSONGson.fromJson(new FileReader("assets/recentquotes.json"), RecentQuote[].class);
          RecentQuote convertedQuote = null;
          if (BBQuote != null) {
            convertedQuote = new RecentQuote( BBQuote[0].author, BBQuote[0].quote);
          }
          RecentQuote[] updatedQuotes = Arrays.copyOf(quotes, quotes.length + 1);
          updatedQuotes[updatedQuotes.length - 1] = convertedQuote;
          String convertedJSON = JSONGson.toJson(updatedQuotes);
          BufferedWriter writer = new BufferedWriter(new FileWriter("assets/updatedQuotes.json"));
          writer.write(convertedJSON);
        } catch (FileNotFoundException e) {
          System.out.println("JSON file not found\n" + e);
          e.printStackTrace();
        } catch (IOException e) {
          e.printStackTrace();
        }
      }
    } catch (MalformedURLException e) {
      return getJSONQuote();
    }
  }

  public static String getJSONQuote() {

    try {
      Gson gson = new Gson();
      RecentQuote[] quote;
      File file = new File("assets/recentquotes.json");
      FileReader reader = new FileReader(file);
      quote = gson.fromJson(reader, RecentQuote[].class);
      int quoteNum = (int) (Math.random() * quote.length);
      return quote[quoteNum].toString();
    } catch (FileNotFoundException e) {
      e.printStackTrace();
      return "JSON file not found\n" + e;
    }
  }
}
